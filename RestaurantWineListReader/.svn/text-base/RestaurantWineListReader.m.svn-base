//
//  RestaurantWineListReader.m
//  WineWiz
//
//  Created by Amad Khilji on 11/25/11.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#import "RestaurantWineListReader.h"
#import "JSON.h"
#import "WWConstants.h"

@implementation RestaurantWineListReader

@synthesize delegate;

static RestaurantWineListReader *singletonInstance;
+(RestaurantWineListReader*)sharedInstance {
    @synchronized ( [RestaurantWineListReader class])
    {
        if (!singletonInstance) {
            singletonInstance = [[RestaurantWineListReader alloc] init];
        }
    }
    return singletonInstance; 
}

- (id)init
{
    self = [super init];
    if (self) {
        // Initialization code here.
        urlData = [[NSMutableData alloc] init];
    }
    
    return self;
}

-(void)requestRestaurantWine:(NSString*)foursquareID Delegate:(id<RestaurantWineDelegate>)restaurantDelegate {
    
    self.delegate = restaurantDelegate;
    [urlData setLength:0];
    NSString *urlString = [NSString stringWithFormat:@"%@wine/get_restaurant_wine_list/",TIPSI_API];
    SBJSON *jsonObj = [[SBJSON alloc] init];
    NSString *parameters = [jsonObj stringWithObject:[NSDictionary dictionaryWithObject:foursquareID forKey:@"foursquare_id"]];
    NSLog(@"JSON Parameters: %@", parameters);
    NSURL *url = [[NSURL alloc] initWithString:urlString];
    NSMutableURLRequest *urlRequest = [NSMutableURLRequest requestWithURL:url];
    NSData *postData = [parameters dataUsingEncoding:NSUTF8StringEncoding];
    NSString *postLength = [NSString stringWithFormat:@"%d", [postData length]];
    [urlRequest setValue:postLength forHTTPHeaderField:@"Content-Length"];
    [urlRequest setValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
    [urlRequest setHTTPBody:postData];
    [urlRequest setHTTPMethod:@"POST"];
    if (urlConnection) {
        [urlConnection cancel];
        urlConnection = nil;
    }
    urlConnection = [[NSURLConnection alloc] initWithRequest:urlRequest delegate:self startImmediately:YES];
    
    [url release];
}

-(void)parseData:(NSString*)responseData {
    
    SBJSON *parser = [[SBJSON alloc] init];
	id data = [parser objectWithString:responseData error:nil];
    if ([data isKindOfClass:[NSArray class]]) {
        if (delegate && [delegate respondsToSelector:@selector(restaurantWineSuccessful:)]) {
            [delegate restaurantWineSuccessful:(NSArray*)data];
            delegate = nil;
        }
    }
    else if ([data isKindOfClass:[NSDictionary class]]) {
        if (delegate && [delegate respondsToSelector:@selector(restaurantWineFailed:)]) {
            [delegate restaurantWineFailed:nil];
            delegate = nil;
        }
    }
}

#pragma NSURLConnectionDelegate Methods

- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data {
    [urlData appendData:data];
}

-(void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error
{
	connection = nil;
    if (delegate && [delegate respondsToSelector:@selector(restaurantWineFailed:)]) {
        [delegate restaurantWineFailed:@"Unable to connect to server, Check your internet connection and try again."];
        delegate = nil;
    }    
}

-(void)connectionDidFinishLoading:(NSURLConnection *)connection
{
    NSString *json_string = [[NSString alloc] initWithData:urlData encoding:NSASCIIStringEncoding];
	//NSLog(@"%@",json_string);
    [self parseData:json_string];
}

@end
